# Any line that starts with # is a comment. It is ignored.
# Text to show at the top of the menu.
OPTIO_BANNER="Optio Demonstration Terminal Menu"

# Text to show at the bottom of the menu.
OPTIO_PROMPT="Please make a selection > "

# Text to show for the menu item to back to the previous menu.
OPTIO_BACK="Back"

# Text to show for the optioHitContinue api call.
OPTIO_CONTINUE="Please hit enter to continue."

# How many lines to save in the history.
OPTIO_STATE_LIMIT=100

# What is considered yes, in uppercase.
OPTIO_YES_LOWER="y"

# What is considered yes, in lowercase.
OPTIO_YES_UPPER="Y"

# What is considered no, in uppercase.
OPTIO_NO_LOWER="n"

# What is considered yes, in lowercase.
OPTIO_NO_UPPER="N"

# @@@ means the end of the global variable section.
# The next section is the menu configuration.
@@@

# If the line starts with =, it means a new menu. The
# top-level menu MUST be called "root".
= root

    # If a line starts with +, it means a new menu item.
    + Write Everything To Disk

        # Any line that follows a menu item name is the command
        # to run when the user chooses that item.
        # This command will run and immediately re-display the
        # menu choices.
        sudo sync

    # If you want to run a command and give the user a chance
    # to see the output, follow the command with the optioHitContinue
    # API call.
    + Disk Space
        df
        optioHitContinue

    # You can run multiple commands for each menu item.
    + List Users
        cd /etc
        cat passwd | awk -F: '{print $1}' | less

    # If you want the user to answer a yes/no question, use the optioAskYesNo
    # API call.
    + Display Messages From Other Users

        optioAskYesNo "Would you like messages from other users?" mesgYesNo

        # The user's response will be recorded in $mesgYesNo

        if test $mesgYesNo;
        then
            mesg y
        else
            mesg n
        fi

    # If you want to get free-form input from the user, use the optioAskValue
    # API call.
    + Edit A File

        optioAskValue "Which file would you like to edit?" fileToEdit

        # The user's response will be recorded in $fileToEdit

        vi $fileToEdit

    # Here is an example of calling into the scriptlet library.
    + Process Count
        echo -n "There are "
        processCount
        echo " processes."
        optioHitContinue

    + Network Menu

        # If a command starts with "menu:", optio will open a submenu.

        menu:network

    + Exit

        # If a command is "exitOptio", optio exit.

        optioExit

# This is a submenu. Notice that we do not need to configure a "back"
# menu item. This is already taken care of by Optio.
= network

    + Netstat
        netstat

# @@@ means the end of the menu section.
# The next section is the scriptlet library. Everything here will be sourced
# before executing a menu command.
@@@

function processCount() {
    echo -n `ps ax | wc -l`
}
